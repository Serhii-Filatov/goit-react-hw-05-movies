{"version":3,"file":"static/js/253.bf82e0c8.chunk.js","mappings":"oSAyBA,EAvBiB,SAAHA,GAAmB,IAAbC,EAAKD,EAALC,MAClB,OACEC,EAAAA,EAAAA,KAAA,MAAAC,SACGF,GACCA,EAAMG,KAAI,SAAAC,GAAA,IAAGC,EAAID,EAAJC,KAAMC,EAAYF,EAAZE,aAAcC,EAASH,EAATG,UAAWC,EAAEJ,EAAFI,GAAE,OAC5CC,EAAAA,EAAAA,MAAA,MAAAP,SAAA,EACED,EAAAA,EAAAA,KAAA,OACES,IACEJ,EAAY,mCAAAK,OAC2BL,GACnCM,EAAAA,GAENC,MAAO,IACPC,IAAG,UAAAH,OAAYN,MAEjBJ,EAAAA,EAAAA,KAAA,MAAAC,SAAKG,KACLI,EAAAA,EAAAA,MAAA,KAAAP,SAAA,CAAG,cAAYK,OAXRC,EAYJ,KAIf,E,UCuBA,EApCc,WACZ,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QAERE,GAAoCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAsBtB,OApBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,eAAAjC,GAAAkC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAED,OAFCF,EAAAC,KAAA,EAEpBb,GAAa,GAAMY,EAAAE,KAAA,GACAC,EAAAA,EAAAA,IAAgB1B,GAAS,KAAD,EAArCqB,EAAIE,EAAAI,KACJL,EAAUD,EAAKO,KACrBrB,EAAce,GAASC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEvBR,EACEe,EAAAA,GAAAA,MAAY,0CAA2C,CACrDC,MAAO,aAET,QAEkB,OAFlBR,EAAAC,KAAA,GAEFb,GAAa,GAAOY,EAAAS,OAAA,6BAAAT,EAAAU,OAAA,GAAAb,EAAA,wBAEvB,kBAfoB,OAAApC,EAAAkD,MAAA,KAAAC,UAAA,KAgBrBlB,GACF,GAAG,CAACjB,KAGFN,EAAAA,EAAAA,MAAA0C,EAAAA,SAAA,CAAAjD,SAAA,CACGuB,IAAaxB,EAAAA,EAAAA,KAACmD,EAAAA,EAAM,IACpBvB,IAAS5B,EAAAA,EAAAA,KAACoD,EAAAA,GAAc,IACxBhC,IAAcpB,EAAAA,EAAAA,KAACqD,EAAQ,CAACtD,MAAOqB,MAGtC,C","sources":["components/CastList/CastList.jsx","components/Casts/Casts.jsx"],"sourcesContent":["import { defaultImg } from '../../utils/constants';\r\n\r\nconst CastList = ({ casts }) => {\r\n  return (\r\n    <ul>\r\n      {casts &&\r\n        casts.map(({ name, profile_path, character, id }) => (\r\n          <li key={id}>\r\n            <img\r\n              src={\r\n                profile_path\r\n                  ? `https://image.tmdb.org/t/p/w500/${profile_path}`\r\n                  : defaultImg\r\n              }\r\n              width={150}\r\n              alt={`poster ${name}`}\r\n            />\r\n            <h3>{name}</h3>\r\n            <p>Character: {character}</p>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CastList;\r\n","import { getMovieCredits } from 'utils/api';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport CastList from 'components/CastList/CastList';\r\nimport { Loader } from 'components/Loader/Loader';\r\n\r\nconst Casts = () => {\r\n  const { movieId } = useParams();\r\n\r\n  const [movieCasts, setMovieCasts] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMovieCasts = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const data = await getMovieCredits(movieId);\r\n        const castArr = data.cast;\r\n        setMovieCasts(castArr);\r\n      } catch (error) {\r\n        setError(\r\n          toast.error('Sorry, something went wrong. Try again!', {\r\n            theme: 'colored',\r\n          })\r\n        );\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchMovieCasts();\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Loader />}\r\n      {error && <ToastContainer />}\r\n      {movieCasts && <CastList casts={movieCasts} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Casts;\r\n"],"names":["_ref","casts","_jsx","children","map","_ref2","name","profile_path","character","id","_jsxs","src","concat","defaultImg","width","alt","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieCasts","setMovieCasts","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchMovieCasts","_asyncToGenerator","_regeneratorRuntime","_callee","data","castArr","_context","prev","next","getMovieCredits","sent","cast","t0","toast","theme","finish","stop","apply","arguments","_Fragment","Loader","ToastContainer","CastList"],"sourceRoot":""}