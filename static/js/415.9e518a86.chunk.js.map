{"version":3,"file":"static/js/415.9e518a86.chunk.js","mappings":"kLAkCA,IA/BuB,SAAHA,GAAoB,IAAdC,EAAMD,EAANC,OAClBC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAeC,SAC1BL,GACCA,EAAOM,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAWF,EAAXE,YAAaC,EAAKH,EAALG,MAAOC,EAAIJ,EAAJI,KAAI,OACxCR,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAeC,UAC3BO,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CACHC,MAAO,CAAEC,KAAMd,GACfG,UAAU,gBACVY,GAAE,WAAAC,OAAaT,GAAKH,SAAA,EAEpBF,EAAAA,EAAAA,KAAA,OACEC,UAAU,oBACVc,MAAO,IACPC,IACEV,EAAW,mCAAAQ,OAC4BR,GACnCW,EAAAA,GAENC,IAAG,WAAAJ,OAAaP,MAElBP,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sBAAqBC,SAAEK,GAAgBC,QAhBtBH,EAkB9B,KAIf,C,8ICWA,UAnCa,WACX,IAAAc,GAAkDC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvDI,EAAiBF,EAAA,GAAEG,EAAoBH,EAAA,GAC9CI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAsBtB,OApBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,eAAAtC,GAAAuC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEL,OAFKF,EAAAC,KAAA,EAExBb,GAAa,GAAMY,EAAAE,KAAA,GACOC,EAAAA,EAAAA,MAAoB,KAAD,EAAAL,EAAAE,EAAAI,KAArCL,EAAOD,EAAPC,QAERf,EAAqBe,GAASC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAE9BR,EACEc,EAAAA,GAAAA,MAAY,0CAA2C,CACrDC,MAAO,aAET,QAEkB,OAFlBP,EAAAC,KAAA,GAEFb,GAAa,GAAOY,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAZ,EAAA,wBAEvB,kBAfwB,OAAAzC,EAAAsD,MAAA,KAAAC,UAAA,KAgBzBjB,GACF,GAAG,KAGDzB,EAAAA,EAAAA,MAAA2C,EAAAA,SAAA,CAAAlD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,QAAOC,SAAC,mBACrByB,IAAa3B,EAAAA,EAAAA,KAACqD,EAAAA,EAAM,IACpBtB,IAAS/B,EAAAA,EAAAA,KAACsD,EAAAA,GAAc,KACzBtD,EAAAA,EAAAA,KAACuD,EAAAA,EAAc,CAAC1D,OAAQ0B,MAG9B,C,6MCtCAiC,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAASC,EAAAA,IAGJ,IAAMf,EAAiB,eAAA/C,GAAAuC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAsB,EAAAC,EAAA,OAAAxB,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACRc,EAAAA,EAAAA,IAAU,GAAD1C,OAAI+C,EAAAA,GAAQ,qBAAoB,KAAD,EAAnD,OAAmDF,EAAAnB,EAAAI,KAAvDgB,EAAID,EAAJC,KAAIpB,EAAAsB,OAAA,SACLF,GAAI,wBAAApB,EAAAS,OAAA,GAAAZ,EAAA,KACZ,kBAH6B,OAAAzC,EAAAsD,MAAA,KAAAC,UAAA,KAKjBY,EAAY,eAAA3D,GAAA+B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA4B,EAAM3D,GAAE,IAAA4D,EAAAL,EAAA,OAAAxB,IAAAA,MAAA,SAAA8B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,cAAAwB,EAAAxB,KAAA,EACXc,EAAAA,EAAAA,IAAU,GAAD1C,OAAI+C,EAAAA,GAAQ,UAAA/C,OAAST,IAAM,KAAD,EAA9C,OAA8C4D,EAAAC,EAAAtB,KAAlDgB,EAAIK,EAAJL,KAAIM,EAAAJ,OAAA,SACLF,GAAI,wBAAAM,EAAAjB,OAAA,GAAAe,EAAA,KACZ,gBAHwBG,GAAA,OAAA/D,EAAA8C,MAAA,KAAAC,UAAA,KAKZiB,EAAe,eAAAC,GAAAlC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAkC,EAAMjE,GAAE,IAAAkE,EAAAX,EAAA,OAAAxB,IAAAA,MAAA,SAAAoC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAAA8B,EAAA9B,KAAA,EACdc,EAAAA,EAAAA,IAAU,GAAD1C,OAAI+C,EAAAA,GAAQ,UAAA/C,OAAST,EAAE,aAAY,KAAD,EAAtD,OAAsDkE,EAAAC,EAAA5B,KAA1DgB,EAAIW,EAAJX,KAAIY,EAAAV,OAAA,SACLF,GAAI,wBAAAY,EAAAvB,OAAA,GAAAqB,EAAA,KACZ,gBAH2BG,GAAA,OAAAJ,EAAAnB,MAAA,KAAAC,UAAA,KAKfuB,EAAe,eAAAC,GAAAxC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAwC,EAAMvE,GAAE,IAAAwE,EAAAjB,EAAA,OAAAxB,IAAAA,MAAA,SAAA0C,GAAA,cAAAA,EAAArC,KAAAqC,EAAApC,MAAA,cAAAoC,EAAApC,KAAA,EACdc,EAAAA,EAAAA,IAAU,GAAD1C,OAAI+C,EAAAA,GAAQ,UAAA/C,OAAST,EAAE,aAAY,KAAD,EAAtD,OAAsDwE,EAAAC,EAAAlC,KAA1DgB,EAAIiB,EAAJjB,KAAIkB,EAAAhB,OAAA,SACLF,GAAI,wBAAAkB,EAAA7B,OAAA,GAAA2B,EAAA,KACZ,gBAH2BG,GAAA,OAAAJ,EAAAzB,MAAA,KAAAC,UAAA,KAKf6B,EAAsB,eAAAC,GAAA9C,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA8C,EAAMC,GAAK,IAAAC,EAAAxB,EAAA,OAAAxB,IAAAA,MAAA,SAAAiD,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAAA2C,EAAA3C,KAAA,EACxBc,EAAAA,EAAAA,IAAU,GAAD1C,OAAI+C,EAAAA,GAAQ,uBAAA/C,OAAsBqE,IAAS,KAAD,EAA9D,OAA8DC,EAAAC,EAAAzC,KAAlEgB,EAAIwB,EAAJxB,KAAIyB,EAAAvB,OAAA,SACLF,GAAI,wBAAAyB,EAAApC,OAAA,GAAAiC,EAAA,KACZ,gBAHkCI,GAAA,OAAAL,EAAA/B,MAAA,KAAAC,UAAA,I,wGC3B5B,IAAMO,EAAU,mCACVG,EAAW,gCAEX5C,EACX,6E","sources":["components/TrendingMovies/TrendingMovies.jsx","pages/Home.jsx","utils/api.jsx","utils/constants.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\r\nimport { defaultImg } from '../../utils/constants';\r\n\r\nconst TrendingMovies = ({ movies }) => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <ul className=\"trending-list\">\r\n      {movies &&\r\n        movies.map(({ id, poster_path, title, name }) => (\r\n          <li className=\"trending-item\" key={id}>\r\n            <Link\r\n              state={{ from: location }}\r\n              className=\"trending-link\"\r\n              to={`/movies/${id}`}\r\n            >\r\n              <img\r\n                className=\"trending-item-img\"\r\n                width={300}\r\n                src={\r\n                  poster_path\r\n                    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\r\n                    : defaultImg\r\n                }\r\n                alt={`Card to ${title}`}\r\n              />\r\n              <h2 className=\"trending-item-title\">{title ? title : name}</h2>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TrendingMovies;\r\n","import { useEffect, useState } from 'react';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport { getTrendingMovies } from 'utils/api';\r\nimport TrendingMovies from 'components/TrendingMovies/TrendingMovies';\r\nimport { Loader } from 'components/Loader/Loader';\r\n\r\nconst Home = () => {\r\n  const [trendingMoviesArr, setTrendingMoviesArr] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchTrendingMovies = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const { results } = await getTrendingMovies();\r\n\r\n        setTrendingMoviesArr(results);\r\n      } catch (error) {\r\n        setError(\r\n          toast.error('Sorry, something went wrong. Try again!', {\r\n            theme: 'colored',\r\n          })\r\n        );\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchTrendingMovies();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"title\">Trending today</h1>\r\n      {isLoading && <Loader />}\r\n      {error && <ToastContainer />}\r\n      <TrendingMovies movies={trendingMoviesArr} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import axios from 'axios';\r\nimport { API_KEY, BASE_URL } from './constants';\r\n\r\naxios.defaults.params = {\r\n  api_key: API_KEY,\r\n};\r\n\r\nexport const getTrendingMovies = async () => {\r\n  const { data } = await axios.get(`${BASE_URL}trending/all/day`);\r\n  return data;\r\n};\r\n\r\nexport const getMovieById = async id => {\r\n  const { data } = await axios.get(`${BASE_URL}movie/${id}`);\r\n  return data;\r\n};\r\n\r\nexport const getMovieCredits = async id => {\r\n  const { data } = await axios.get(`${BASE_URL}movie/${id}/credits`);\r\n  return data;\r\n};\r\n\r\nexport const getMovieReviews = async id => {\r\n  const { data } = await axios.get(`${BASE_URL}movie/${id}/reviews`);\r\n  return data;\r\n};\r\n\r\nexport const getMoviesbySearchQuery = async query => {\r\n  const { data } = await axios.get(`${BASE_URL}search/movie?query=${query}`);\r\n  return data;\r\n};\r\n","export const API_KEY = '3df770cbcce42751a371232778d32a4f';\r\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\r\n\r\nexport const defaultImg =\r\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\r\n"],"names":["_ref","movies","location","useLocation","_jsx","className","children","map","_ref2","id","poster_path","title","name","_jsxs","Link","state","from","to","concat","width","src","defaultImg","alt","_useState","useState","_useState2","_slicedToArray","trendingMoviesArr","setTrendingMoviesArr","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getTrendingMov","results","_context","prev","next","getTrendingMovies","sent","t0","toast","theme","finish","stop","apply","arguments","_Fragment","Loader","ToastContainer","TrendingMovies","axios","api_key","API_KEY","_yield$axios$get","data","BASE_URL","abrupt","getMovieById","_callee2","_yield$axios$get2","_context2","_x","getMovieCredits","_ref3","_callee3","_yield$axios$get3","_context3","_x2","getMovieReviews","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getMoviesbySearchQuery","_ref5","_callee5","query","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}