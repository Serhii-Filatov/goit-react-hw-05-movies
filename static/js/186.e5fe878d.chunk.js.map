{"version":3,"file":"static/js/186.e5fe878d.chunk.js","mappings":"0RAeA,EAfoB,SAAHA,GAAqB,IAAfC,EAAOD,EAAPC,QACrB,OACEA,EAAQC,OAAS,IACfC,EAAAA,EAAAA,KAAA,MAAAC,SACGH,EAAQI,KAAI,SAAAC,GAAA,IAAGC,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QAASC,EAAEH,EAAFG,GAAE,OACjCC,EAAAA,EAAAA,MAAA,MAAAN,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAKG,KACLJ,EAAAA,EAAAA,KAAA,KAAAC,SAAII,MAFGC,EAGJ,KAKf,E,UCoCA,EAxCgB,WACd,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QAERE,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAsBtB,OApBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,eAAA5B,GAAA6B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEH,OAFGF,EAAAC,KAAA,EAEtBZ,GAAa,GAAMW,EAAAE,KAAA,GACAC,EAAAA,EAAAA,IAAgBzB,GAAS,KAAD,EAArCqB,EAAIC,EAAAI,KAEVnB,EAAgBc,EAAKM,SAASL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAE9BP,EACEc,EAAAA,GAAAA,MAAY,0CAA2C,CACrDC,MAAO,aAET,QAEkB,OAFlBR,EAAAC,KAAA,GAEFZ,GAAa,GAAOW,EAAAS,OAAA,6BAAAT,EAAAU,OAAA,GAAAZ,EAAA,wBAEvB,kBAfsB,OAAA/B,EAAA4C,MAAA,KAAAC,UAAA,KAgBvBjB,GACF,GAAG,CAACjB,KAGFD,EAAAA,EAAAA,MAAAoC,EAAAA,SAAA,CAAA1C,SAAA,CACGiB,IAAalB,EAAAA,EAAAA,KAAC4C,EAAAA,EAAM,IACpBtB,IAAStB,EAAAA,EAAAA,KAAC6C,EAAAA,GAAc,IACxB/B,EAAaf,OAAS,GACrBC,EAAAA,EAAAA,KAAC8C,EAAW,CAAChD,QAASgB,KAEtBd,EAAAA,EAAAA,KAAA,KAAAC,SAAG,+CAIX,C","sources":["components/ReviewsList/ReviewsList.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["const ReviewsList = ({ reviews }) => {\r\n  return (\r\n    reviews.length > 0 && (\r\n      <ul>\r\n        {reviews.map(({ author, content, id }) => (\r\n          <li key={id}>\r\n            <h2>{author}</h2>\r\n            <p>{content}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )\r\n  );\r\n};\r\n\r\nexport default ReviewsList;\r\n","import { useEffect, useState } from 'react';\r\nimport { getMovieReviews } from 'utils/api';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ReviewsList from 'components/ReviewsList/ReviewsList';\r\nimport { Loader } from 'components/Loader/Loader';\r\n\r\nconst Reviews = () => {\r\n  const { movieId } = useParams();\r\n\r\n  const [movieReviews, setMovieReviews] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMovieReviews = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const data = await getMovieReviews(movieId);\r\n\r\n        setMovieReviews(data.results);\r\n      } catch (error) {\r\n        setError(\r\n          toast.error('Sorry, something went wrong. Try again!', {\r\n            theme: 'colored',\r\n          })\r\n        );\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchMovieReviews();\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Loader />}\r\n      {error && <ToastContainer />}\r\n      {movieReviews.length > 0 ? (\r\n        <ReviewsList reviews={movieReviews} />\r\n      ) : (\r\n        <p>We don`t have any reviews for this movie</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n"],"names":["_ref","reviews","length","_jsx","children","map","_ref2","author","content","id","_jsxs","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieReviews","setMovieReviews","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchMovieReviews","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getMovieReviews","sent","results","t0","toast","theme","finish","stop","apply","arguments","_Fragment","Loader","ToastContainer","ReviewsList"],"sourceRoot":""}